name: Driver build

on:
#   push:
#     branches:
#     - main
  workflow_dispatch:

jobs:
  deployment:
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: http://kindling.harmonycloud.cn
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
        
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: |
              ${{ secrets.KEY_ONE }}
              ${{ secrets.KEY_TWO }}
      
      - name: Build and Package
        env:
          HOSTS: ${{ secrets.HOSTS }}
        run: |
          # build
          wget https://github.com/KindlingProject/agent-libs/archive/${GITHUB_SHA}.tar.gz -O agent-libs-${GITHUB_SHA}.tar.gz
          for HOST in $HOSTS; do
            echo "scp agent-libs.tar.gz"
            scp  /tmp/agent-libs-${GITHUB_SHA}.tar.gz $HOST:/tmp
            ssh  "$HOST" << EOF
            cd /tmp
            echo "unzip agent-libs..."
            tar -zvxf agent-libs-${GITHUB_SHA}.tar.gz
            echo "Compile kindling-drivers..."
            docker run --rm -v /usr:/host/usr -v /lib/modules:/host/lib/modules -v /tmp/agent-libs-${GITHUB_SHA}:/source kindlingproject/kernel-builder:latest
          EOF
          done

          # copy and package
          rm -rf /tmp/kindling-falcolib-probe && mkdir /tmp/kindling-falcolib-probe
          for HOST in $HOSTS; do
            scp -i /root/.ssh/github_public_id_rsa $HOST:/tmp/agent-libs-${GITHUB_SHA}/kindling-falcolib-probe/* /tmp/kindling-falcolib-probe/
          done

          tar -cvzf /tmp/kindling-falcolib-probe.tar.gz /tmp/kindling-falcolib-probe/

          # check version
          ls -a /tmp/kindling-falcolib-probe/

          # TODO
